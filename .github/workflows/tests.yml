name: tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  code_quality:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            ${{ steps.npm-cache-dir.outputs.dir }}
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install modules
        run: npm install --no-audit --no-fund
      - name: Run code quality tests
        run: npm run lint:static
      - name: Run types tests
        run: npm run lint:types
      - name: Run Prettier check
        run: npm run lint:prettier

  unit_node:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            ${{ steps.npm-cache-dir.outputs.dir }}
            **/node_modules
            .eslintcache
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install modules
        run: npm install --no-audit --no-fund
      - name: Run tests
        run: npm run test -- -- --coverage --runInBand --ci || npm run test -- -- --coverage --runInBand --ci
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./packages/coverage
          flags: unittests
          fail_ci_if_error: false
          verbose: true

  unit_pest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.1', '8.2', '8.3']
        twig-versions: ['^2.10', '^3']
    env:
      PHP_VERSION: ${{ matrix.php-versions }}
      TWIG_VERSION: ${{ matrix.twig-versions }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - run: npx bun install

      - name: Setup PHP, with composer and xdebug
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Install Twig specific version
        run: composer require twig/twig:${{ matrix.twig-versions }}

      - name: Pest
        run: php -v && XDEBUG_MODE=coverage ./vendor/bin/pest --coverage --coverage-clover='coverage.xml'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: PHP_VERSION,TWIG_VERSION
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false
          verbose: true

  export_size:
    runs-on: macos-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - uses: titouanmathis/export-size-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build_script: npm run build-for-export-size
          paths: dist
          bundler: esbuild
          node-version: '18'
