name: Tests

on:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:

  Code-Quality:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20.11
        cache: 'npm'
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    - uses: actions/cache@v4
      id: npm-cache
      with:
        path: |
          ${{ steps.npm-cache-dir.outputs.dir }}
          **/node_modules
          .eslintcache
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    - name: Install modules
      run: npm install --no-audit --no-fund
    - name: Run code quality tests
      run: npm run lint:eslint -- --format=compact
    - name: Run types tests
      run: npm run lint:types

  Unit:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20.11
        cache: 'npm'
    - name: Get npm cache directory
      id: npm-cache-dir
      shell: bash
      run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
    - uses: actions/cache@v4
      id: npm-cache
      with:
        path: |
          ${{ steps.npm-cache-dir.outputs.dir }}
          **/node_modules
          .eslintcache
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    - name: Install modules
      run: npm install --no-audit --no-fund
    - name: Run tests
      run: npm run test -- -- --coverage
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./packages/coverage
        flags: unittests
        fail_ci_if_error: false
        path_to_write_report: ./codecov_report.txt
        verbose: true

  Export-Size:
    runs-on: macos-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - uses: titouanmathis/export-size-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          build_script: npm run build-for-export-size
          paths: dist
          bundler: esbuild
          node-version: '18'
